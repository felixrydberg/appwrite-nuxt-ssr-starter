worker_processes 1;

events {
    worker_connections 1024;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    access_log off;
    error_log /dev/null;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # HTTPS server
    server {
        listen 443 ssl;
        server_name localhost;

        # SSL certificate configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # SSL settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:10m;
        # Disable OCSP stapling for self-signed certificates
        ssl_stapling off;
        ssl_stapling_verify off;

        location /api/service/ {
            proxy_pass https://fra.cloud.appwrite.io/v1/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host fra.cloud.appwrite.io;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;  # Force HTTPS for backend
            # Set origin header to localhost
            proxy_set_header Origin "https://localhost";
            # Set referer to localhost
            proxy_set_header Referer "https://localhost";
            proxy_cache_bypass $http_upgrade;
            
            proxy_ssl_server_name on;
            proxy_ssl_verify off;
            
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Use $host for cookie domain to preserve the original host
            proxy_cookie_domain fra.cloud.appwrite.io $host;
            proxy_cookie_path / "/";
            proxy_cookie_flags ~ nosecure;
            
            proxy_hide_header x-fallback-cookies;
        }

        location / {
            proxy_pass http://nuxt:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            proxy_cookie_path / "/";
            proxy_cookie_flags ~ nosecure;
        }
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name localhost;
        
        location / {
            return 301 https://$host$request_uri;
        }
    }
}